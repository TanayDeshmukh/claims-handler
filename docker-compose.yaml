version: '3.8'

services:
  redis:
    image: 'redis:7'
    container_name: 'redis'
    ports:
      - 6379:6379

  email-ingestion-service:
    build:
      context: .
      dockerfile: email-ingestion-service/Dockerfile
    container_name: 'email-ingestion-service'
    ports:
      - "8000:8000"
      - "8001:8001"
    depends_on:
      - redis
    env_file:
      - .env
    volumes:
      - D:/Jobs/Assona/claims:/app/storage


  email-processing-worker:
    build:
      context: .
      dockerfile: email-processing-worker/Dockerfile
    container_name: 'email-processing-worker'
    depends_on:
      - redis
    env_file:
      - .env

  document-classifier-worker:
    build:
      context: .
      dockerfile: document-classifier-worker/Dockerfile
    container_name: 'document-classifier-worker'
    depends_on:
      - email-processing-worker
    env_file:
      - .env


  ocr-worker:
    build:
      context: .
      dockerfile: ocr-worker/Dockerfile
    container_name: 'ocr-worker'
    depends_on:
      - document-classifier-worker
    env_file:
      - .env


  data-extraction-worker:
    build:
      context: .
      dockerfile: data-extraction-worker/Dockerfile
    container_name: 'data-extraction-worker'
    depends_on:
      - ocr-worker
    env_file:
      - .env

  policy-coverage-check-worker:
    build:
      context: .
      dockerfile: policy-coverage-check-worker/Dockerfile
    container_name: 'policy-coverage-check-worker'
    depends_on:
      - data-extraction-worker
    env_file:
      - .env

  cost-positions-extraction-worker:
    build:
      context: .
      dockerfile: cost-positions-extraction-worker/Dockerfile
    container_name: 'cost-positions-extraction-worker'
    depends_on:
      - policy-coverage-check-worker
    env_file:
      - .env

  case-plausibility-check-worker:
    build:
      context: .
      dockerfile: case-plausibility-check-worker/Dockerfile
    container_name: 'case-plausibility-check-worker'
    depends_on:
      - cost-positions-extraction-worker
    env_file:
      - .env

  prometheus:
    image: 'prom/prometheus:v3.5.0'
    volumes:
      - ./prometheus/:/etc/prometheus/
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - "9090:9090"
    depends_on:
      - email-ingestion-service

  grafana:
    image: 'grafana/grafana:12.1.0'
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    ports:
      - "3000:3000"
    depends_on:
      - prometheus

volumes:
  grafana_data: {}